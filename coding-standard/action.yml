name: "Coding Standard"
author: "Graycore"
description: "A Github Action that runs the Magento Coding Standard."

inputs:
  php_version:
    required: true
    default: "8.1"
    description: "PHP version used to do the coding standard check."

  composer_version:
    required: true
    default: "2"
    description: "The version of composer to use."

  path:
    required: true
    default: "app/code"
    description: "The directory (relative to the project root) in which the coding standard will be checked. Used when the event is not a pull request."

  version:
    required: false
    default: "31"
    description: "The version of the coding standard to use. If not provided, will use the latest version."

  severity:
    required: false
    default: "5"
    description: "The minimum severity required to display an error or warning (default: 5)"

  warning_severity:
    required: false
    default: "5"
    description: "The minimum severity required to display a warning"

  error_severity:
    required: false
    default: "5"
    description: "The minimum severity required to display an error"

runs:
  using: composite
  steps:
    - name: Checkout Project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: standard

    - name: Set PHP Version
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php_version }}
        tools: composer:v${{ inputs.composer_version }}
        coverage: none

    - name: Install Coding Standard
      shell: bash
      working-directory: standard
      run: |
        composer require "magento/magento-coding-standard"
        composer config --no-plugins allow-plugins.digitalrevolution/php-codesniffer-baseline true
        composer require --dev "digitalrevolution/php-codesniffer-baseline"


    - name: Register Coding Standard
      shell: bash
      working-directory: standard
      run: vendor/bin/phpcs --config-set installed_paths ${{ github.workspace }}/standard/vendor/magento/magento-coding-standard,${{ github.workspace }}/standard/vendor/phpcompatibility/php-compatibility

    - name: Get changed files
      shell: bash
      id: changed-new-files
      run: |
        if ${{ github.event_name == 'pull_request' }}; then
          echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT
        else
          echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT
        fi

    - name: List out old files
      shell: bash
      id: previous-commit-files
      run:  |
        if ${{ github.event_name == 'pull_request' }}; then
          git checkout ${{ github.event.pull_request.base.ref }}
        else
          git checkout ${{ github.event.before }}
        fi

        for file in ${{ steps.changed-new-files.outputs.changed_files }}; do
          echo $file >> ${{ github.workspace }}/file_lists.txt
        done
        cat ${{ github.workspace }}/file_lists.txt

    - name: List new changes and Run
      shell: bash
      working-directory: standard
      run: |
        grep -i "\.php$" ${{ github.workspace }}/file_lists.txt > ${{ github.workspace }}/file_php_old.txt
        echo $(php vendor/bin/phpcs --standard=Magento2 --report=\\DR\\CodeSnifferBaseline\\Reports\\Baseline --file-list=${{ github.workspace }}/file_php_old.txt) > ${{ github.workspace }}/phpcs-old.xml
        cat ${{ github.workspace }}/phpcs-old.xml

    - name: List out changed files
      shell: bash
      id: latest-files
      run:  |
        if ${{ github.event_name == 'pull_request' }}; then
          git checkout ${{ github.event.pull_request.head.ref }}
        else
          git checkout ${{ github.event.after }}
        fi

        for file in ${{ steps.changed-new-files.outputs.changed_files }}; do
          echo $file >> ${{ github.workspace }}/file_lists.txt
        done

    - name: List new changes and Run
      shell: bash
      working-directory: standard
      run: |
        grep -i "\.php$" ${{ github.workspace }}/file_lists.txt > ${{ github.workspace }}/file_php_new.txt
        echo $(php vendor/bin/phpcs --standard=Magento2 --report=\\DR\\CodeSnifferBaseline\\Reports\\Baseline --file-list=${{ github.workspace }}/file_php_new.txt) > ${{ github.workspace }}/phpcs-new.xml
        cat ${{ github.workspace }}/phpcs-new.xml
