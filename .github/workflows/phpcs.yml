name: "Coding Standard"

on:
  push:
    branches: [ 2.4-develop, develop, phpcs_test ]
  pull_request:
    branches: [ 2.4-develop, develop, phpcs_test ]

inputs:
  php_version:
    required: true
    default: "8.1"
    description: "PHP version used to do the coding standard check."

  composer_version:
    required: true
    default: "2"
    description: "The version of composer to use."

  path:
    required: true
    default: 'app/code'
    description: "The directory (relative to the project root) in which the coding standard will be checked. Used when the event is not a pull request."

  version:
    required: false
    description: "The version of the coding standard to use. If not provided, will use the latest version."

  severity:
    required: false
    default: ""
    description: "The minimum severity required to display an error or warning (default: 5)"

  warning_severity:
    required: false
    default: ""
    description: "The minimum severity required to display a warning"

  error_severity:
    required: false
    default: ""
    description: "The minimum severity required to display an error"

jobs:
  php:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
        dependencies:
          - "lowest"
          - "highest"
        exclude:
          - php-version: "8.1"
            dependencies: "lowest"
    name: Tests with PHP ${{ matrix.php-version }} and ${{ matrix.dependencies }} dependencies

    steps:
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          ini-file: development
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Validate composer
        run: composer validate

      - name: Composer install
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ matrix.composer-options }}"

      - name: Run unit tests suite
        run: vendor/bin/phpunit

      - name: Run code style suite
        run: vendor/bin/phpcs --standard=Magento2 Magento2/Helpers Magento2/Sniffs Magento2/Rector Magento2Framework/Sniffs

      - name: Run framework suite
        run: vendor/bin/phpcs --standard=Magento2Framework Magento2/Helpers Magento2/Sniffs Magento2/Rector Magento2Framework/Sniffs
